1
00:00:00,000 --> 00:00:07,000
La sicurezza degli account online è ormai un argomento abbastanza conosciuto. La pratica

2
00:00:07,000 --> 00:00:13,280
di tenere al sicuro password, dati, dispositivi sta iniziando a diventare sempre più di uso

3
00:00:13,280 --> 00:00:20,380
comune. Sempre più utenti utilizzano i password manager e le piattaforme implementano meccanismi

4
00:00:20,380 --> 00:00:26,280
più sicuri per i processi di autenticazione. Ma c'è un aspetto delle identità online

5
00:00:26,280 --> 00:00:32,780
che purtroppo ancora si tende a sottovalutare, una fase del rapporto tra utente e piattaforma

6
00:00:32,780 --> 00:00:38,580
che sì è pur vero che si verifica una sola volta per ciascun utente, ma è comunque

7
00:00:38,580 --> 00:00:44,340
un momento fondamentale per la sua sicurezza. Quello a cui mi sto riferendo è il processo

8
00:00:44,340 --> 00:00:50,780
di registrazione ed in particolare la protezione degli account ancora prima che questi vengano

9
00:00:50,780 --> 00:00:57,360
creati. Oggi, infatti, parliamo di falle in servizi online diffusissimi, di account

10
00:00:57,360 --> 00:01:03,440
che ancora non esistono e di come proteggere questi ultimi dai criminali. L'argomento

11
00:01:03,440 --> 00:01:09,000
di questo episodio, dunque, è l'attacco account pre hijacking. Sigla.

12
00:01:09,000 --> 00:01:18,000
Benvenuti su Pensieri in Codice, il podcast dove si ragiona da informatici, con Valerio

13
00:01:18,000 --> 00:01:26,580
Alano. Sì, lo so, ultimamente mi sono un po' fissato

14
00:01:26,580 --> 00:01:32,740
sul tema degli attacchi informatici, ma trovo che alcuni di essi siano particolarmente interessanti

15
00:01:32,740 --> 00:01:39,100
per l'ingegno che serve ad escogitarli e mi piace capire i meccanismi, le caratteristiche

16
00:01:39,100 --> 00:01:45,020
e soprattutto le idee che hanno portato alla loro creazione. E qualche giorno fa mi è

17
00:01:45,020 --> 00:01:50,120
capitato di mettere le mani su di uno studio molto interessante condotto da due ricercatori

18
00:01:50,120 --> 00:01:57,040
di nome Sudhodanan e Pavard che prendeva in esame i problemi di sicurezza riguardanti

19
00:01:57,040 --> 00:02:04,200
i processi di creazione degli account su vari servizi online. Questi due ricercatori, rispettivamente

20
00:02:04,200 --> 00:02:10,320
un indipendente e un membro del Microsoft Security Response Center, hanno infatti analizzato

21
00:02:10,320 --> 00:02:18,280
75 tra le più popolari piattaforme di servizi online e hanno scoperto che almeno 35 fra

22
00:02:18,280 --> 00:02:25,200
queste risultavano vulnerabili a quello che loro hanno poi definito pre-hijacking accounts

23
00:02:25,200 --> 00:02:33,400
attack. Nella pratica questo vuol dire che per 35 dei 75 siti analizzati è possibile

24
00:02:33,400 --> 00:02:38,240
per un malintenzionato mettere a segno un tipo di attacco alla piattaforma che prenda di

25
00:02:38,240 --> 00:02:44,760
mira uno specifico account che però sulla piattaforma ancora non esiste ma che gli permetterà

26
00:02:44,760 --> 00:02:51,400
in seguito, se dovesse realmente esistere, di prenderne il possesso. Infatti, una volta

27
00:02:51,400 --> 00:02:56,720
che l'account verrà effettivamente creato dal legittimo proprietario, grazie a questa

28
00:02:56,720 --> 00:03:03,840
sorta di attacco preventivo il criminale potrà attuare il cosiddetto hijacking, cioè

29
00:03:03,840 --> 00:03:10,280
introdursi nel profilo compromesso e sottrarne informazioni o a volte addirittura compiere

30
00:03:10,280 --> 00:03:16,440
operazioni sfruttando l'identità del malcapitato. Ora, capisco che a prima vista questa possa

31
00:03:16,440 --> 00:03:21,960
sembrare una cosa impossibile, senza senso, come si fa a craccare qualcosa che ancora

32
00:03:21,960 --> 00:03:28,760
non esiste. Fatto sta che questa tipologia di attacco è reale e in vari casi sembra

33
00:03:28,760 --> 00:03:35,520
neanche così difficile da mettere in atto, visto che la vulnerabilità di per sé sembra

34
00:03:35,520 --> 00:03:41,120
essere abbastanza diffusa anche tra i BIG. Chiaramente le piattaforme oggetto dello studio

35
00:03:41,120 --> 00:03:48,000
sono state avvertite preventivamente e hanno avuto modo di correggere le loro vulnerabilità,

36
00:03:48,000 --> 00:03:53,120
ma parlando in generale l'attacco si struttura più o meno in questo modo, in tre fasi ben

37
00:03:53,120 --> 00:03:59,080
distinte. Nella prima, l'attaccante svolge essenzialmente un'attività preparatoria,

38
00:03:59,080 --> 00:04:04,320
questa può cambiare leggermente a seconda della particolare declinazione dell'attacco,

39
00:04:04,320 --> 00:04:10,560
ma in linea di principio si tratta di creare un account su una specifica piattaforma e nel

40
00:04:10,560 --> 00:04:17,240
farlo utilizzare non il proprio identificativo ma quello della vittima. Per capirci, immaginiamo

41
00:04:17,240 --> 00:04:22,120
che sia sbarcata da poco in Italia una nuova piattaforma di e-commerce che chiameremo,

42
00:04:22,120 --> 00:04:29,280
non so, Scontissimo. Se io volessi attaccare te su Scontissimo, in questa prima fase andrei ad

43
00:04:29,280 --> 00:04:35,120
aprire un nuovo account sulla piattaforma utilizzando il tuo indirizzo email. Chiaramente

44
00:04:35,120 --> 00:04:41,360
per poterlo fare occorre che io sia a conoscenza del tuo indirizzo email e che tu non sia ancora

45
00:04:41,360 --> 00:04:46,840
registrato su Scontissimo, ma queste sono entrambe condizioni non troppo difficili da

46
00:04:46,840 --> 00:04:52,520
soddisfare e a questo punto non dovrei far altro che attendere che sia l'utente, cioè tu,

47
00:04:52,520 --> 00:04:58,840
a completare la seconda fase, cioè iscriverti realmente al servizio. Magari dopo qualche mese

48
00:04:58,840 --> 00:05:05,320
potresti scoprire che c'è un prodotto che ti interessa su Scontissimo e decidere di creare

49
00:05:05,320 --> 00:05:12,520
il tuo account per acquistarlo e nel farlo ovviamente utilizzerai la tua email, la stessa

50
00:05:12,520 --> 00:05:19,080
che ho già utilizzato tempo addietro. Ed ecco che finalmente scatta la terza fase, cioè quella

51
00:05:19,080 --> 00:05:25,120
in cui io posso entrare nel tuo nuovo account e a seconda dei casi sottrarti informazioni,

52
00:05:25,120 --> 00:05:30,600
magari denaro o addirittura prendere il controllo completo del tuo profilo. Ok,

53
00:05:30,600 --> 00:05:36,320
so di averla fatta molto semplice, l'ho raccontata in modo un po' generico, ma non temere perché fra

54
00:05:36,320 --> 00:05:41,880
poco vedremo un po' più in dettaglio come funzionano un paio delle cinque categorie di

55
00:05:42,240 --> 00:05:48,760
pre-hacking attack individuate da Sudodanan e Pavard, ma il punto qui è che un attacco del

56
00:05:48,760 --> 00:05:55,280
genere non dovrebbe teoricamente essere possibile. Primo perché tecnicamente l'account non esiste e

57
00:05:55,280 --> 00:06:02,720
quindi in teoria non ci sarebbe nulla da craccare e poi perché i processi di registrazione solitamente

58
00:06:02,720 --> 00:06:08,840
sono muniti di meccanismi di sicurezza, i quali ne impediscono l'utilizzo in modo differente da

59
00:06:08,880 --> 00:06:14,240
quello per cui sono stati progettati. Purtroppo però, come vedremo fra poco,

60
00:06:14,240 --> 00:06:20,600
anche quando questi controlli sono presenti non sempre risultano sufficienti a contrastare

61
00:06:20,600 --> 00:06:27,080
gli attacchi di pre-hacking. Una serie di funzionalità, infatti, come la single sign-on,

62
00:06:27,080 --> 00:06:34,280
la possibilità di utilizzare un account prima della conferma dell'identificativo, il reset della

63
00:06:34,280 --> 00:06:39,720
password, il cambio dell'email e altre caratteristiche del genere, perfettamente lecite

64
00:06:39,720 --> 00:06:45,880
se prese singolarmente, nell'insieme possono portare a falle di sicurezza nei processi di

65
00:06:45,880 --> 00:06:51,480
registrazione che permettono attacchi come quelli di cui stiamo parlando oggi. Ad esempio,

66
00:06:51,480 --> 00:06:57,720
una variante che i due ricercatori hanno chiamato Classic Federated Merge Attack si

67
00:06:57,720 --> 00:07:03,800
basa proprio sui meccanismi di autenticazione federata, cioè quelli di cui fanno parte single

68
00:07:03,800 --> 00:07:08,840
sign-on e simili. Di single sign-on, qui su Pensieri in Codice ne abbiamo già parlato,

69
00:07:08,840 --> 00:07:14,440
ad esempio nell'episodio Attacco Browser in the Browser, che ti consiglio chiaramente di recuperare,

70
00:07:14,440 --> 00:07:20,760
ma in due parole la single sign-on è quel tipo di autenticazione che permette di accedere ad

71
00:07:20,760 --> 00:07:27,320
un sito utilizzando non direttamente la nostra username e password, ma un'identità registrata

72
00:07:27,400 --> 00:07:34,280
presso un altro sito o servizio, il quale prende il nome di Identity Provider. Nella pratica,

73
00:07:34,280 --> 00:07:39,720
noi utilizziamo la single sign-on ogni volta che clicchiamo su quei pulsanti del tipo Accedi con

74
00:07:39,720 --> 00:07:47,240
Google o Accedi con Facebook e così via, e nel Classic Federated Merge Attack la single sign-on

75
00:07:47,240 --> 00:07:54,080
fa proprio da perno centrale dell'attacco. Nella prima fase, infatti, l'attaccante si collega alla

76
00:07:54,080 --> 00:08:00,160
piattaforma scelta e crea un account utilizzando l'identificativo della vittima. Di solito,

77
00:08:00,160 --> 00:08:05,840
come abbiamo già detto, questo è l'indirizzo email. La piattaforma in questione quindi con

78
00:08:05,840 --> 00:08:11,760
estrema probabilità invia un email alla vittima. Una di quelle email in cui c'è scritto qualcosa

79
00:08:11,760 --> 00:08:18,480
del tipo Benvenuto, clicca qui per confermare il tuo account, ma la vittima con altrettanta

80
00:08:18,520 --> 00:08:24,080
probabilità ignorerà questo messaggio e lo battezzerà come spam. D'altronde,

81
00:08:24,080 --> 00:08:29,040
anch'io se mi vedessi arrivare un email di Benvenuto senza essermi iscritto ad alcun

82
00:08:29,040 --> 00:08:36,440
servizio penserei a un tentativo di phishing, probabilmente. Al tempo stesso, però, l'attaccante

83
00:08:36,440 --> 00:08:42,440
che non ha veramente accesso alla mail della vittima non può confermare l'account. L'unica

84
00:08:42,440 --> 00:08:48,440
cosa che può fare, sempre se la piattaforma effettivamente lo permette, è autenticarsi e

85
00:08:48,440 --> 00:08:54,920
mantenere attiva la sessione dell'account appena creato. Obiettivo che si può facilmente raggiungere

86
00:08:54,920 --> 00:09:01,840
utilizzando un qualche script automatico. Intanto, deve solo restare in attesa che la vittima completi

87
00:09:01,840 --> 00:09:07,920
la seconda fase. In cosa consiste questa seconda fase? Semplice, l'abbiamo già detto prima,

88
00:09:07,920 --> 00:09:14,360
la registrazione al sito in questione. Ma, attenzione, non con il processo classico,

89
00:09:14,360 --> 00:09:20,640
quello che vedremo fra poco con email e password, bensì tramite single sign-on o in generale

90
00:09:20,640 --> 00:09:26,760
autenticazione federata. Dopo qualche tempo, infatti, la vittima potrebbe decidere di voler

91
00:09:26,760 --> 00:09:33,440
utilizzare effettivamente il servizio attaccato e nel farlo potrebbe voler utilizzare la sua

92
00:09:33,440 --> 00:09:38,680
autenticazione di twitter o di facebook o quella che gli viene più comoda. E quindi,

93
00:09:38,680 --> 00:09:45,360
dopo aver cliccato su accedi con twitter, il sito in questione crea un account utilizzando

94
00:09:45,360 --> 00:09:51,000
l'identificativo della vittima ricevuto appunto da twitter. Ma, siccome trova già un account

95
00:09:51,000 --> 00:09:56,720
parzialmente creato dall'attaccante con quello stesso identificativo, cioè con la stessa email,

96
00:09:56,920 --> 00:10:04,600
li unisce in un unico profilo, dando per scontato di stare comunicando con lo stesso utente. Si

97
00:10:04,600 --> 00:10:11,000
tratta di un meccanismo abbastanza comune nelle login federate. L'identity provider conosce

98
00:10:11,000 --> 00:10:17,120
l'identificativo che l'utente utilizza normalmente, quindi l'email, e lo comunica al sito presso il

99
00:10:17,120 --> 00:10:23,400
quale sta effettuando la registrazione. Il sito, a sua volta, se già possiede nei suoi archivi un

100
00:10:23,400 --> 00:10:29,640
account con quell'indirizzo, dà per scontato che si tratti dello stesso utente e di conseguenza

101
00:10:29,640 --> 00:10:36,400
collega le due identità insieme. A questo punto la seconda fase è conclusa e la terza consiste,

102
00:10:36,400 --> 00:10:43,280
per il criminale, semplicemente nel recuperare quella sessione mantenuta attiva di cui parlavamo

103
00:10:43,280 --> 00:10:49,200
prima e utilizzarla per accedere indisturbato al nuovo account appena creato dal legittimo

104
00:10:49,200 --> 00:10:55,040
proprietario. Sia attaccante che vittima ora possono utilizzare lo stesso account

105
00:10:55,040 --> 00:11:00,880
contemporaneamente e pertanto il criminale può non solo accedere a tutte le informazioni,

106
00:11:00,880 --> 00:11:07,960
i messaggi e quanto altro contenuto nel profilo, ma addirittura eseguire anche operazioni attive

107
00:11:07,960 --> 00:11:15,400
se lo ritiene necessario. Può modificare i dati, inviare messaggi, tutto quello che può fare anche

108
00:11:15,400 --> 00:11:22,040
il legittimo proprietario. Una variante di questo attacco poi può essere messa in atto all'inverso,

109
00:11:22,040 --> 00:11:30,200
nello studio è denominata Federated Classic Merge Attack invece di Classic Federated. In questa

110
00:11:30,200 --> 00:11:36,640
variante il criminale utilizza l'identificativo della vittima per aprire un account presso una

111
00:11:36,640 --> 00:11:43,880
identity provider e poi sfrutta questo account per la fase 1 per aprire parzialmente un altro

112
00:11:43,880 --> 00:11:49,880
account tramite un'autenticazione federata. Quando poi la vittima utilizza la registrazione

113
00:11:49,880 --> 00:11:57,400
classica, quella con username e password, per aprire un account legittimo l'effetto è sostanzialmente

114
00:11:57,400 --> 00:12:03,120
lo stesso descritto fino ad ora, semplicemente con la differenza che gli strumenti utilizzati

115
00:12:03,120 --> 00:12:09,720
sono alla rovescia. C'è poi un'altra tipologia interessante di Pre Hijacking Attack che prende

116
00:12:09,720 --> 00:12:16,600
invece il nome di Unexpired Session Attack. In questa categoria che descriveremo brevemente,

117
00:12:16,600 --> 00:12:22,960
l'attaccante crea sempre un nuovo account sulla piattaforma prescelta utilizzando sempre l'indirizzo

118
00:12:22,960 --> 00:12:28,320
email della vittima, poi allo stesso modo dell'attacco precedente si autentica e mantiene

119
00:12:28,320 --> 00:12:34,160
la sessione attiva. Questa volta però quando il malcapitato, vittima dell'attacco, vorrà creare

120
00:12:34,160 --> 00:12:40,080
il proprio account utilizzando ovviamente la propria email e la propria password, troverà

121
00:12:40,080 --> 00:12:48,400
che stranamente esiste già un account con quella email. Ora potrebbe insospettirsi e fermare

122
00:12:48,400 --> 00:12:55,200
l'operazione, questo è chiaro, ma potrebbe anche non farci troppo caso. Magari è scritto a centinaia

123
00:12:55,200 --> 00:13:01,160
di servizi e gli è già capitato di non ricordare di essere iscritto ad uno in particolare. Chissà

124
00:13:01,160 --> 00:13:08,520
quando forse gli sembra di ricordare di aver già utilizzato questo servizio in passato e forse chissà

125
00:13:08,520 --> 00:13:16,520
avrà dovuto creare un account così al volo di cui ha dimenticato gli accessi. In ogni caso nessun

126
00:13:16,520 --> 00:13:23,480
problema, tanto c'è l'opzione di recupero password e così la vittima ignara recupera la password e

127
00:13:23,480 --> 00:13:30,000
inizia a utilizzare il suo nuovo account che lui crede sia vecchio ma che in realtà è stato creato

128
00:13:30,000 --> 00:13:36,520
da qualcun altro. Nel frattempo l'attaccante che ha mantenuto attiva la famosa sessione per tutto

129
00:13:36,520 --> 00:13:43,000
questo tempo a questo punto ha il via libera e può tranquillamente girovagare indisturbato per

130
00:13:43,000 --> 00:13:49,360
il profilo che la vittima ha appena confermato. Ci sono altre tre varianti sul tema ma per i

131
00:13:49,360 --> 00:13:55,280
dettagli ti lascio in descrizione lo studio di Sudodanan e Pavard, tanto ormai il concetto

132
00:13:55,280 --> 00:14:01,400
generale dovrebbe essere più o meno chiaro. È possibile in certi casi e su certe piattaforme

133
00:14:01,400 --> 00:14:07,520
avviare degli attacchi nei confronti di utenze che ancora non esistono, aspettare che queste si

134
00:14:07,520 --> 00:14:14,000
concretizzino e poi completare l'attacco solo successivamente. Una cosa fondamentale da capire

135
00:14:14,000 --> 00:14:20,880
però è che non tutti i siti sono vulnerabili a questo pre hijacking attack. Per mettere in pratica

136
00:14:20,880 --> 00:14:27,040
le procedure descritte nel paper infatti sono necessarie particolari condizioni ad esempio che

137
00:14:27,040 --> 00:14:33,240
la piattaforma permetta di autenticarsi senza aver confermato l'indirizzo email oppure che sia

138
00:14:33,240 --> 00:14:39,680
possibile collegare un account federato con uno normale non ancora confermato. In altri casi invece

139
00:14:39,680 --> 00:14:47,000
è necessario che il sito non invi avvisi ai propri utenti in caso di particolari eventi oppure è

140
00:14:47,040 --> 00:14:52,640
semplicemente sufficiente che questi li ignorino perché li considerano troppo strani o tentativi

141
00:14:52,640 --> 00:15:01,240
di phishing. Casi certamente non sempre comunissimi, questo va ammesso, ma nemmeno così rari come

142
00:15:01,240 --> 00:15:09,360
dimostra il fatto che, come accennavo prima, ben 35 servizi online su 75 analizzati sono risultati

143
00:15:09,360 --> 00:15:16,880
vulnerabili è quasi il 50 per cento e tra questi ci sono nomi importanti come Dropbox, Instagram,

144
00:15:16,880 --> 00:15:23,280
LinkedIn, WordPress.com e Zoom. E come se non bastasse un attacco del genere può essere anche

145
00:15:23,280 --> 00:15:30,120
applicato su larga scala. Per un attaccante si tratta solo di scovare una piattaforma vulnerabile

146
00:15:30,120 --> 00:15:35,720
e una lista di indirizzi email che con buona probabilità si iscriveranno a tale piattaforma

147
00:15:35,720 --> 00:15:42,640
in un tempo ragionevole. Questa cosa ti potrà sembrare difficile ma in realtà non lo è affatto.

148
00:15:42,640 --> 00:15:49,840
Indirizzi email se ne trovano a bizzeffe, basta fare scraping su qualche sito come LinkedIn o

149
00:15:49,840 --> 00:15:57,680
procurarsi quei grossi database frutto di data breach o operazioni ransomware, quelli che vabbè

150
00:15:57,680 --> 00:16:03,600
ma in fondo che problema c'è se hanno sottratto un po' di indirizzi email? Ecco, ecco che problema

151
00:16:03,600 --> 00:16:09,800
c'è. Mentre per le piattaforme non è poi così complicato individuare un sito o un social che

152
00:16:09,800 --> 00:16:16,320
magari è in forte crescita in un certo periodo o che sta per sbarcare sul nuovo mercato. Si possono

153
00:16:16,320 --> 00:16:21,640
anche reperire informazioni su grossi enti, società e istituzioni che stanno per effettuare

154
00:16:21,640 --> 00:16:28,560
adozioni di massa di un certo servizio online. Purtroppo la possibilità di mitigare il pre

155
00:16:28,760 --> 00:16:35,360
hijacking attack è quasi totalmente nelle mani dei gestori delle piattaforme. O la piattaforma

156
00:16:35,360 --> 00:16:40,720
è sicura, cioè impedisce tutte quelle condizioni che abbiamo descritto poco fa e altre simili che

157
00:16:40,720 --> 00:16:47,880
per questioni di tempo ho dovuto omettere, oppure ci sono ben poche piccole cose che noi utenti

158
00:16:47,880 --> 00:16:53,520
possiamo mettere in pratica. Però ad esempio possiamo cercare di fare attenzione alle email

159
00:16:53,520 --> 00:16:59,320
che riceviamo. Spesso le piattaforme inviano messaggi di benvenuto, di avviso di logging dai

160
00:16:59,320 --> 00:17:06,400
nuovi dispositivi, di richiesta di reset password. Anche se non riconosciamo il servizio potremmo

161
00:17:06,400 --> 00:17:12,680
fermarci un secondo a verificare se l'email è autentica, cioè se non è phishing e magari

162
00:17:12,680 --> 00:17:19,160
segnalare che non abbiamo creato alcun account su quel servizio. Oppure se stiamo creando un

163
00:17:19,160 --> 00:17:25,480
nuovo account e ci troviamo costretti a resettare la password perché questo esiste già e noi non

164
00:17:25,480 --> 00:17:32,480
ricordiamo di averlo creato, magari entriamo e disconnettiamo tutte le sessioni. Altrimenti

165
00:17:32,480 --> 00:17:39,560
chiediamoci quando abbiamo creato questo account e che cosa ci abbiamo effettivamente fatto. Nulla?

166
00:17:39,560 --> 00:17:45,680
Non riusciamo proprio a ricordare? Beh allora magari cancelliamolo e creamone un altro con un

167
00:17:45,680 --> 00:17:52,200
email diversa. Alla fine si tratta di perdere 5 minuti. Ancora potremmo darci la regola di non

168
00:17:52,200 --> 00:17:59,000
registrarci mai a nessun servizio attraverso l'autenticazione federata, qualsiasi sia il

169
00:17:59,000 --> 00:18:05,520
service provider. In questo modo taglieremo già fuori un bel pezzo di superficie d'attacco. In

170
00:18:05,520 --> 00:18:11,760
generale però cerchiamo proprio di prediligere i servizi che ci bombardano di verifiche,

171
00:18:11,760 --> 00:18:18,480
siano esse email, pin, autenticazioni a due fattori. Lo so che sono noiose ma sono per la

172
00:18:18,480 --> 00:18:24,320
nostra sicurezza. E' proprio questa infatti una delle cause principali per le quali si vengono

173
00:18:24,320 --> 00:18:31,480
a creare le condizioni per il pre hijacking account attack, la cosiddetta riduzione della

174
00:18:31,480 --> 00:18:38,160
frizione di utilizzo da parte dell'utente. Meccanismi come la single sign on o la possibilità

175
00:18:38,160 --> 00:18:44,560
di utilizzare account ancora prima di averli confermati o la scarsità di verifiche in generale

176
00:18:44,560 --> 00:18:52,040
servono proprio per ridurre la frizione tra utente e piattaforma. E' chiaro che se devo fare meno

177
00:18:52,040 --> 00:18:58,120
operazioni per diventare un utente allora è più facile che io diventi un utente, cosa che si

178
00:18:58,120 --> 00:19:05,040
trasforma banalmente in più utenti felici per la piattaforma. Ma tutto questo apre delle falle di

179
00:19:05,040 --> 00:19:11,280
sicurezza che se sfruttate possono portare a conseguenze piuttosto gravi per tutti. Per forza

180
00:19:11,280 --> 00:19:18,640
di cose infatti le piattaforme per ridurre la frizione riducono anche la quantità di verifiche

181
00:19:18,640 --> 00:19:25,720
necessarie ad accertarsi che l'utilizzatore sia anche il vero proprietario dell'identificativo e

182
00:19:25,720 --> 00:19:33,080
questo apre delle finestre di vulnerabilità che restano aperte fintanto che alcune procedure non

183
00:19:33,080 --> 00:19:40,160
vengono completate. Il clic su un link in un'email ad esempio, l'inserimento di un codice

184
00:19:40,160 --> 00:19:46,360
inviato tramite un canale secondario o la cancellazione automatica di un account mai

185
00:19:46,360 --> 00:19:54,200
attivato dopo un tot di tempo e altre cose del genere. Non costringendoci a completare queste

186
00:19:54,200 --> 00:20:01,760
verifiche prima di fare qualsiasi altra operazione le piattaforme ci mettono di fatto a rischio. Siamo

187
00:20:01,800 --> 00:20:08,000
quindi anche noi utenti a dover spingere per una maggiore sicurezza magari attivando tutti i livelli

188
00:20:08,000 --> 00:20:14,640
di controllo possibili e magari evitando di utilizzare meccanismi frictionless anche se ciò

189
00:20:14,640 --> 00:20:21,520
andrà a discapito della nostra comodità perché sicuramente diminuirà anche la possibilità di

190
00:20:21,520 --> 00:20:27,840
cadere in trappole come il pre hijacking attack. D'altronde è una scocciatura anche disattivare

191
00:20:27,840 --> 00:20:34,200
l'allarme ogni volta che rientriamo in casa ma se l'abbiamo attivato l'abbiamo fatto per la nostra

192
00:20:34,200 --> 00:20:40,440
sicurezza. Bene, spero come al solito di averti portato qualche informazione e qualche riflessione

193
00:20:40,440 --> 00:20:46,400
interessante. Sul sito pensieriincodice.it mi raccomando con due i trovi tutti i miei

194
00:20:46,400 --> 00:20:52,200
contatti e il link al gruppo telegram dove possiamo discutere insieme di questo e altri argomenti.

195
00:20:52,680 --> 00:20:58,800
Prima di lasciarti ti ricordo che pensieri in codice è un podcast indipendente interamente

196
00:20:58,800 --> 00:21:05,240
prodotto da me nel mio tempo libero e con le mie risorse personali quindi se apprezzi quello che

197
00:21:05,240 --> 00:21:10,800
faccio e come al solito se sei arrivato fin qui immagino che un pochino lo apprezzi condividi

198
00:21:10,800 --> 00:21:16,720
l'episodio. Fallo ascoltare ad un amico a un parente a chiunque pensi possa essere interessato

199
00:21:16,720 --> 00:21:22,960
agli argomenti che trattiamo tu farei bella figura e intanto contribuirai a far crescere

200
00:21:22,960 --> 00:21:28,040
questo progetto. Detto questo ti ringrazio per l'ascolto ti do appuntamento al prossimo

201
00:21:28,040 --> 00:21:34,080
episodio e ti ricordo che un informatico risolve problemi a volte anche usando il computer.

