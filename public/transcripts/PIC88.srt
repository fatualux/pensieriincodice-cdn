1
00:00:00,000 --> 00:00:05,920
Di intelligenza artificiale, qui su Pensieri in Codice ne parliamo spesso. Come funzionano

2
00:00:05,920 --> 00:00:11,640
machine e deep learning? Quali effetti più o meno evidenti queste tecnologie hanno sulla

3
00:00:11,640 --> 00:00:17,920
nostra vita quotidiana, sulle nostre scelte e sui nostri comportamenti? E dato che, quando

4
00:00:17,920 --> 00:00:23,240
mi capita l'occasione di sperimentare qualcosa di interessante in prima persona, solitamente

5
00:00:23,240 --> 00:00:29,800
la colgo abbastanza al volo, appena mi è stato possibile ho subito deciso di integrare

6
00:00:29,800 --> 00:00:35,920
Copilot, il nuovo algoritmo di intelligenza artificiale di Microsoft, all'interno delle

7
00:00:35,920 --> 00:00:41,860
mie attività quotidiane di scrittura del codice. L'ho utilizzato attivamente, ho provato

8
00:00:41,860 --> 00:00:47,360
a studiarlo, a studiarne gli effetti su di me e sul mio lavoro e anche sul mio modo di

9
00:00:47,360 --> 00:00:52,760
lavorare e negli ultimi giorni ho provato a fare una piccola valutazione del risultato.

10
00:00:52,760 --> 00:00:58,440
Nell'episodio di oggi quindi ti racconto la mia esperienza e le mie impressioni dopo

11
00:00:58,440 --> 00:01:04,240
quattro mesi di utilizzo quotidiano di GitHub Copilot. Non prima però di aver ascoltato

12
00:01:04,240 --> 00:01:05,240
la sigla.

13
00:01:05,240 --> 00:01:16,000
Benvenuti su Pensieri in Codice, il podcast dove si ragiona da informatici, con Valerio

14
00:01:16,000 --> 00:01:17,680
Galano.

15
00:01:17,680 --> 00:01:25,680
Se non ne hai mai sentito parlare, devi sapere che GitHub Copilot è un'intelligenza artificiale

16
00:01:25,680 --> 00:01:31,960
appositamente progettata per programmare, per scrivere codice. Sul sito ufficiale Microsoft

17
00:01:31,960 --> 00:01:37,560
la definisce Your AI Pair Programmer, proprio a voler sottolineare il fatto che si tratta

18
00:01:37,560 --> 00:01:43,960
di un servizio progettato per sviluppare insieme al programmatore, per seguirlo, supportarlo,

19
00:01:43,960 --> 00:01:49,960
aiutarlo e consigliarlo durante la fase di scrittura del codice. In pratica si tratta

20
00:01:49,960 --> 00:01:56,960
di un motore di machine learning basato su Codex OpenAI e allenato utilizzando la ormai

21
00:01:56,960 --> 00:02:02,640
enorme mole di codice presente su GitHub. La promessa di questo servizio è quella di

22
00:02:02,640 --> 00:02:08,480
alleggerire il programmatore nello svolgere quelle operazioni meccaniche e o ripetitive

23
00:02:08,480 --> 00:02:14,880
che notorialmente portano via ingenti quantità di tempo, o conducono a massicci copia e incolla,

24
00:02:14,880 --> 00:02:21,720
o sono fonte di bug dovuti a distrazione, insomma la parte noiosa del lavoro. Noi diciamo

25
00:02:21,720 --> 00:02:26,440
sempre che programmare significa risolvere problemi, che lo sviluppo è un'attività

26
00:02:26,440 --> 00:02:34,440
creativa, però poi finiamo spesso a scrivere e riscrivere o importare grosse parti di codice

27
00:02:34,440 --> 00:02:40,120
per l'esecuzione di operazioni più o meno comuni, che magari abbiamo già risolto altrove

28
00:02:40,120 --> 00:02:45,640
o che altri hanno già risolto prima di noi. Copilot quindi è stato pensato proprio per

29
00:02:45,640 --> 00:02:50,480
semplificare queste operazioni e permettere a chi lo utilizza di dedicarsi alla parte

30
00:02:50,480 --> 00:02:56,720
importante del lavoro, cioè il ragionamento, la progettazione e la risoluzione dei problemi.

31
00:02:56,720 --> 00:03:02,280
E per fare questo implementa tutta una serie di funzionalità veramente interessanti se

32
00:03:02,280 --> 00:03:07,880
non addirittura stupefacenti. Ad esempio, tra le tante, poiché è un discendente diretto

33
00:03:07,880 --> 00:03:14,520
dell'ormai celebre GPT-3, Copilot è in grado di convertire direttamente i commenti in codice

34
00:03:14,520 --> 00:03:20,280
funzionante. Basta infatti descrivere in un commento il modo in cui un metodo o una funzione

35
00:03:20,280 --> 00:03:27,240
debba funzionare, iniziare a scriverne la firma e come per magia l'algoritmo prova a produrre

36
00:03:27,240 --> 00:03:33,560
il codice che ritiene più adatto per svolgere le operazioni descritte. A quel punto il programmatore

37
00:03:33,560 --> 00:03:39,400
può accettare il codice proposto ed eventualmente modificarlo o correggerlo se lo ritiene necessario,

38
00:03:39,400 --> 00:03:45,280
oppure rifiutare ed iniziare a scrivere il proprio codice ed in tal caso l'algoritmo

39
00:03:45,280 --> 00:03:51,680
continuerà ad autocorreggersi e a proporre altre soluzioni che si adattino sia alle richieste sia

40
00:03:51,680 --> 00:03:56,840
a quanto già scritto. Un'altra funzione molto interessante poi è quella che serve a completare

41
00:03:56,840 --> 00:04:03,520
porzioni di codice ripetitivo. A volte infatti serve compilare un oggetto o un array con tanti

42
00:04:03,520 --> 00:04:10,600
elementi o una serie di proprietà o di costanti secondo una certa logica. Mi riferisco, che so,

43
00:04:10,600 --> 00:04:17,680
magari ad un array che contiene una serie di tag HTML da convertire in qualcos'altro o una serie

44
00:04:17,680 --> 00:04:24,520
di costanti che rappresentano i nomi dei mesi dell'anno o addirittura la traduzione in varie

45
00:04:24,520 --> 00:04:31,160
lingue della stessa parola. Capitano a volte queste piccole macchinose scocciature e in

46
00:04:31,160 --> 00:04:37,020
questi casi Copilot è in grado di capire e completare queste liste per conto del programmatore.

47
00:04:37,020 --> 00:04:43,640
Già negli esempi sul sito infatti viene mostrato come sia sufficiente scrivere un paio di righe

48
00:04:43,640 --> 00:04:51,640
e l'algoritmo fa tutto il resto intuendo quali altri elementi serve aggiungere, a quali valori

49
00:04:51,640 --> 00:04:57,520
vadano associati e così via. Ovviamente poi l'algoritmo è di grande aiuto anche nella

50
00:04:57,520 --> 00:05:04,000
generazione dei test e non solo perché crea le classi o i metodi di testing come fanno i moderni

51
00:05:04,000 --> 00:05:11,400
editor o i moderni framework ma anche perché cerca di predisporre casi specifici con valori

52
00:05:11,400 --> 00:05:18,080
che potrebbero essere significativi ai fini del test quindi generando casi standard, casi particolari,

53
00:05:18,080 --> 00:05:24,640
casi limite e così via. Infine sono addirittura presenti numerose integrazioni con vari servizi

54
00:05:25,040 --> 00:05:31,560
online quindi in pratica il programmatore scrive la firma di una funzione o di un metodo come ad

55
00:05:31,560 --> 00:05:40,400
esempio FetchTweetsFromUser e Copilot scrive tutto il resto della funzione. Chiamata all'API di

56
00:05:40,400 --> 00:05:47,400
Twitter, parsing della risposta, restituzione dei dati eccetera eccetera. Ora anche se tu che mi

57
00:05:47,400 --> 00:05:53,440
ascolti non sei un programmatore spero ti risulti chiaro quanto tutto questo sia qualcosa di

58
00:05:53,440 --> 00:05:59,720
impressionante quasi magia un algoritmo che scrive codice praticamente un sogno quale

59
00:05:59,720 --> 00:06:04,880
programmatore non vorrebbe usarlo? Prima di procedere con l'episodio però mi voglio fermare

60
00:06:04,880 --> 00:06:11,720
un attimo e precisare una cosa perché lo so già tu ascoltatore abituale di pensieri in codice a cosa

61
00:06:11,720 --> 00:06:17,520
starai pensando. Sì tutto bellissimo ma quale codice viene utilizzato per allenare questa

62
00:06:17,520 --> 00:06:23,200
intelligenza artificiale? Con quale autorizzazioni viene dato in pasto ad un algoritmo il lavoro

63
00:06:23,280 --> 00:06:30,360
fatto da qualcun altro e il risultato di questo lavoro è praticamente del codice copiato da altri

64
00:06:30,360 --> 00:06:37,440
progetti e altre domande del genere? Beh a questo proposito io posso solo dire che Microsoft parla

65
00:06:37,440 --> 00:06:43,560
di utilizzo responsabile dell'intelligenza artificiale che l'algoritmo non copia ma

66
00:06:43,560 --> 00:06:51,840
rielabora e offre soluzioni ottimizzate e che per quanto io ricordi chi utilizza GitHub concede

67
00:06:51,840 --> 00:06:56,720
fondamentalmente a Microsoft la possibilità di esaminare il proprio codice tramite strumenti

68
00:06:56,720 --> 00:07:02,920
di parsing quindi in teoria qualsiasi codice presente sulla piattaforma potrebbe finire in

69
00:07:02,920 --> 00:07:09,880
pasto a Copilot. Tutte queste affermazioni però prima di tutto non sono semplicissime da verificare

70
00:07:09,880 --> 00:07:17,760
e poi ognuna delle domande di poco fa meriterebbe un'analisi e una discussione a sé e onestamente

71
00:07:17,760 --> 00:07:25,000
tutto ciò non è argomento centrale di questo episodio ed io non sono neanche certamente la

72
00:07:25,000 --> 00:07:30,440
persona più qualificata ad esaminare questo tipo di aspetti che sono più di tipo legale o

73
00:07:30,440 --> 00:07:36,920
contrattualistico quindi per oggi eviterò volutamente di approfondire questa parte del

74
00:07:36,920 --> 00:07:43,760
discorso ma magari potremmo confrontarci insieme a riguardo sul gruppo Telegram che ne pensi? Se

75
00:07:43,760 --> 00:07:50,480
ti va e ovviamente se non sei già iscritto trovi il link in descrizione. Quindi chiusa questa piccola

76
00:07:50,480 --> 00:07:56,040
parentesi torniamo all'argomento principale dell'episodio parlavamo delle fantastiche

77
00:07:56,040 --> 00:08:01,520
funzionalità di Copilot quindi dopo quella descrizione immagina il mio entusiasmo quando

78
00:08:01,520 --> 00:08:07,440
verso la fine di ottobre dell'anno scorso ho scoperto che il mio ambiente di sviluppo preferito

79
00:08:07,440 --> 00:08:13,960
e più utilizzato phpStorm aveva aggiunto il supporto a questo servizio tramite l'installazione

80
00:08:13,960 --> 00:08:19,880
di un piccolo plugin. Immediatamente l'ho installato e configurato su tutti o quasi i miei

81
00:08:19,880 --> 00:08:26,360
progetti personali e professionali ovviamente escludendo quelli per i quali non posso sottoporre

82
00:08:26,360 --> 00:08:34,240
il codice a parsing questo si intende e poi ho iniziato a esplorare le funzionalità. Ora se hai

83
00:08:34,240 --> 00:08:38,760
mai utilizzato un editor un po' più evoluto dovresti avere già familiarità con il concetto

84
00:08:38,760 --> 00:08:44,680
di autocompletamento ma se magari non sei un programmatore prova a pensare a google search

85
00:08:44,680 --> 00:08:52,640
che implementa l'autocomplete sulla casella di ricerca e prova così a indovinare la prossima

86
00:08:52,640 --> 00:09:00,160
lettera o parola o frase che scriverai utilizzando un suo algoritmo. Ecco un ambiente di sviluppo

87
00:09:00,160 --> 00:09:06,760
avanzato come può essere phpStorm o visual studio code o simili implementa già nativamente questo

88
00:09:06,760 --> 00:09:12,760
tipo di funzione tu inizi a scrivere il nome di una variabile o di un metodo e lui inizia già a

89
00:09:12,760 --> 00:09:19,160
suggerirti una lista di possibili opzioni per il completamento spesso tra questi c'è il suggerimento

90
00:09:19,160 --> 00:09:26,840
corretto qualche volta no ma in generale il motore che muove questa funzionalità è un algoritmo

91
00:09:27,080 --> 00:09:33,320
basato sulle regole del linguaggio o del framework se è presente o del progetto in cui si sta

92
00:09:33,320 --> 00:09:39,840
lavorando github copilot invece è molto più complesso di così a differenza dell'autocomplete

93
00:09:39,840 --> 00:09:46,640
l'intelligenza artificiale di microsoft prova a indovinare non solo variabili ma interi metodi

94
00:09:46,640 --> 00:09:53,240
blocchi di commento a volte ha provato perfino a suggerirmi intere classi chiaramente basandosi

95
00:09:53,240 --> 00:09:59,240
solo sul nome del file che avevo appena creato da un punto di vista meramente operativo in un

96
00:09:59,240 --> 00:10:04,960
progetto configurato con copilot al momento mi basta posizionare il cursore in mezzo al codice

97
00:10:04,960 --> 00:10:11,600
ed ecco che lui parte con i suggerimenti a volte anche se non ho ancora neanche iniziato a scrivere

98
00:10:11,600 --> 00:10:18,960
alcunché semplicemente io credo si basi su ciò che c'è scritto prima e dopo il cursore e così

99
00:10:18,960 --> 00:10:24,600
facendo provi a dare la risposta alla domanda perché ha posizionato il cursore in questo punto

100
00:10:24,600 --> 00:10:31,680
cosa vuole scrivere inizialmente a scopo puramente sperimentale ho provato un po tutte le funzioni che

101
00:10:31,680 --> 00:10:38,360
ti ho descritto poco fa e ricordo di aver subito pensato che funzionavano in modo impressionante

102
00:10:38,360 --> 00:10:43,960
finiti i test sperimentali però ho lasciato attiva l'integrazione al servizio per utilizzarla

103
00:10:43,960 --> 00:10:51,240
attivamente durante il lavoro di tutti i giorni e nello sviluppo dei miei side project onestamente

104
00:10:51,240 --> 00:10:58,400
i primi tempi non sapevo bene cosa aspettarmi cioè immaginavo di aver installato una sorta di super

105
00:10:58,400 --> 00:11:06,040
auto completamento molto potente ma con il fatto che il php non è ufficialmente ancora supportato

106
00:11:06,040 --> 00:11:12,040
o meglio sul sito ufficiale si parla di una dozzina di linguaggi ma esplicitamente ne vengono nominati

107
00:11:12,040 --> 00:11:18,880
solo 4-5 javascript python go e simili non pensavo che mi avrebbe dato chissà quanti

108
00:11:18,880 --> 00:11:26,920
suggerimenti reali però poi ho dovuto ricredermi l'algoritmo si attiva praticamente sempre basta

109
00:11:26,920 --> 00:11:33,440
posizionare il cursore e parte con il suggerimento più probabile nello specifico nel mio editor che

110
00:11:33,440 --> 00:11:39,840
della famiglia jetbrains lo inserisce come testo dal colore un po meno marcato all'interno del

111
00:11:39,840 --> 00:11:47,440
codice già presente nonché solitamente presenta almeno altre tre o quattro alternative in un'apposita

112
00:11:47,440 --> 00:11:54,800
area mentre lavoro sul codice copilot cerca di completare nomi di variabili istruzioni funzioni

113
00:11:54,800 --> 00:12:00,720
cicli assegnazioni persino i commenti e lo fa persino in italiano quando qualche volta mi

114
00:12:00,720 --> 00:12:06,520
capita di scriverne o modificarne e se il cursore si trova all'interno di una classe ma fuori da un

115
00:12:06,520 --> 00:12:12,440
qualsiasi metodo appaiono suggerimenti su proprietà ma persino anche su interi metodi da

116
00:12:12,440 --> 00:12:20,800
implementare la quantità di output prodotta è a dir poco impressionante ma almeno per me qui

117
00:12:20,800 --> 00:12:28,840
iniziano le note dolenti quanto sono effettivamente accurati i suggerimenti di questo algoritmo o in

118
00:12:28,840 --> 00:12:34,600
realtà per dirla in modo un po più corretto quanto sono accurati per me quanto hanno effettivamente

119
00:12:35,160 --> 00:12:41,320
migliorato la mia velocità di sviluppo è diminuito il mio lavoro necessario per implementare una

120
00:12:41,320 --> 00:12:47,920
modifica una funzionalità o addirittura un intero software online esistono varie statistiche riguardo

121
00:12:47,920 --> 00:12:54,840
copilot puoi cercare tu stesso troverai chi parla di percentuali accuratezza sicurezza e cose simili

122
00:12:54,840 --> 00:13:03,200
ma io posso parlarti solo della mia esperienza personale la quale purtroppo non è molto positiva

123
00:13:03,720 --> 00:13:10,200
nonostante la notevole mole di suggerimenti infatti per me per il mio modo di lavorare

124
00:13:10,200 --> 00:13:16,640
forse o per i miei specifici progetti quasi tutti gli sforzi dell'algoritmo si sono infine

125
00:13:16,640 --> 00:13:23,200
rivelati inutili e ben pochi sono entrati effettivamente a far parte delle mie implementazioni

126
00:13:23,200 --> 00:13:29,720
per contro invece il fatto di dover scartare continuamente tanti suggerimenti mi ha causato

127
00:13:29,720 --> 00:13:36,680
non poche perdite di tempo ad un certo punto infatti una volta resomi conto di questo problema

128
00:13:36,680 --> 00:13:44,480
ho provato ad analizzarne i motivi ed ho individuato alcune casistiche del comportamento

129
00:13:44,480 --> 00:13:51,480
dell'algoritmo durante il mio lavoro che secondo me possono essere interessanti ad esempio a volte

130
00:13:51,480 --> 00:13:58,200
capita che il suggerimento sia chiaramente frutto di un qualche strano loop appare un codice che si

131
00:13:58,200 --> 00:14:04,520
ripete in modo sospetto fino a sforare oltre il limite destro della finestra di modifica si

132
00:14:04,520 --> 00:14:11,840
tratta di casi particolari anche se non così rari come mi sarei aspettato ma non sono un

133
00:14:11,840 --> 00:14:18,040
grandissimo problema perché sono piuttosto facili da scartare saltano subito all'occhio basta

134
00:14:18,040 --> 00:14:23,600
ignorarli e continuare a scrivere altre volte invece capita che io mi stia semplicemente muovendo

135
00:14:23,600 --> 00:14:28,400
tra una riga e l'altra magari cercando di comprendere il funzionamento del codice o

136
00:14:28,400 --> 00:14:35,920
cercando un bug e l'algoritmo inizia a suggerire di aggiungere funzionalità cicli o altri blocchi

137
00:14:35,920 --> 00:14:42,480
che semplicemente non servono e non c'entrano nulla con il mio essere posizionato in quel

138
00:14:42,480 --> 00:14:49,680
punto a volte ancora capita che suggerisca blocchi di codice così lunghi che spostano il codice vero

139
00:14:49,680 --> 00:14:56,120
fuori dallo schermo e muovendoti magari con le frecce direzionali di riga in riga questi mega

140
00:14:56,120 --> 00:15:02,120
suggerimenti che appaiono e scompaiono fanno espandere e contrarre il codice regolare rendendone

141
00:15:02,120 --> 00:15:09,840
frustrante la lettura anche se per dir la verità questo particolare comportamento sembra essere

142
00:15:09,840 --> 00:15:15,960
diminuito nell'ultimo periodo forse a causa di un qualche aggiornamento ma sinceramente non potrei

143
00:15:16,080 --> 00:15:24,160
esserne sicuro ad ogni modo quando un suggerimento cade al di fuori di tutti questi casi che ti ho

144
00:15:24,160 --> 00:15:31,520
appena descritto e magari appare a prima vista sensato diventa comunque necessario leggerne tutto

145
00:15:31,520 --> 00:15:38,440
il codice spesso modificarlo e adattarlo almeno per me io non riesco a immaginare come si possa

146
00:15:38,600 --> 00:15:46,680
accettare il suggerimento di una macchina in modo acritico e andare avanti e basta e così alla fine

147
00:15:46,680 --> 00:15:54,680
se sai utilizzare discretamente l'editor spesso fai prima a scrivertelo da te quel codice

148
00:15:54,680 --> 00:16:01,320
paradossalmente in tutto questo l'unica applicazione che ho trovato veramente utile è quella della

149
00:16:01,320 --> 00:16:07,600
scrittura dei commenti ma attenzione non parlo dei blocchi di commento che descrivono i parametri

150
00:16:07,600 --> 00:16:15,600
delle funzioni l'output eccetera quelli li genera egregiamente già il php storm intendo proprio le

151
00:16:15,600 --> 00:16:21,720
frasi descrittive nei commenti quando infatti descrivo a parole il funzionamento di una

152
00:16:21,720 --> 00:16:28,600
porzione di codice ho sempre la sensazione che copilot mi stia leggendo nel pensiero e questo

153
00:16:28,600 --> 00:16:35,760
effettivamente spesso mi è d'aiuto e mi permette di essere più veloce ovviamente non sempre ma

154
00:16:35,760 --> 00:16:41,560
accade molto più spesso che in tutti gli altri casi in conclusione quindi per quella che è la mia

155
00:16:41,560 --> 00:16:48,440
personalissima esperienza github copilot purtroppo per ora non si è rivelato essere di grandissimo

156
00:16:48,440 --> 00:16:55,600
aiuto nella scrittura del codice la quantità di suggerimenti che non si rivelano essere utili

157
00:16:55,600 --> 00:17:03,000
per me è tale che mi ha portato praticamente a sviluppare una sorta di automatismo che mi fa

158
00:17:03,000 --> 00:17:09,360
scartare immediatamente qualsiasi suggerimento a meno che non ci metta la testa e questo di

159
00:17:09,360 --> 00:17:15,000
solito accade quando sono più stanco verso fine giornata diciamo però che comunque una sorta di

160
00:17:15,000 --> 00:17:20,520
miglioramento c'è stata all'inizio non faceva altro che rallentarmi per via di tutti quei piccoli

161
00:17:20,520 --> 00:17:26,280
problemi di cui ti ho parlato prima ma poi con il tempo diciamo che un po mi sono abituato ad

162
00:17:26,280 --> 00:17:33,680
ignorarlo in determinate situazioni e un po in altre ho imparato a prendere solo quello di

163
00:17:33,680 --> 00:17:40,080
positivo che ha da offrire anche se per ora non sembra essere moltissimo sicuramente però continuerò

164
00:17:40,080 --> 00:17:45,400
ad utilizzarlo primo perché spero in un futuro miglioramento sia per quanto riguarda l'algoritmo

165
00:17:45,400 --> 00:17:52,200
in sé che per l'integrazione all'interno di php storm che credo sia in parte complice di alcuni

166
00:17:52,200 --> 00:17:58,760
comportamenti strani e poi perché sono sicuro che molte delle difficoltà incontrate dipendano

167
00:17:58,760 --> 00:18:05,600
dal mio stile di utilizzo e credo che riuscendo ad affinare il mio modo di rapportarmi ad esso con

168
00:18:05,600 --> 00:18:12,400
il tempo potrà diventare di fatto un valido strumento di supporto in definitiva personalmente

169
00:18:12,400 --> 00:18:19,800
penso che questa tecnologia sia ancora acerba e mi preoccupa un po che allo stato attuale possa

170
00:18:19,800 --> 00:18:26,240
essere più deleteria che di aiuto soprattutto se magari utilizzata da chi non è in grado di

171
00:18:26,240 --> 00:18:32,120
gestirla o impiegarla con razziocinio il comportamento che assume infatti nonché il

172
00:18:32,120 --> 00:18:37,880
modo in cui viene presentata potrebbero portare uno sviluppatore poco esperto anche solo magari

173
00:18:37,880 --> 00:18:43,720
pigro ad accettare petissequamente i suoi suggerimenti senza porre la giusta attenzione

174
00:18:44,120 --> 00:18:50,360
a quale codice sta andando ad integrare all'interno della propria codebase potenzialmente

175
00:18:50,360 --> 00:18:56,560
introducendo in tal modo bug o problemi di sicurezza le implicazioni psicologiche di uno

176
00:18:56,560 --> 00:19:02,960
strumento del genere infatti possono essere molte e secondo me non vanno trascurate sul sito ufficiale

177
00:19:02,960 --> 00:19:09,320
di copilot microsoft ha inserito esplicitamente la frase you are the pilot proprio per affermare

178
00:19:09,320 --> 00:19:15,960
che è sempre il programmatore a decidere in fin dei conti ma siamo proprio sicuri che sia così

179
00:19:15,960 --> 00:19:21,840
dopotutto l'abbiamo già visto in tanti casi e situazioni simili l'utilizzo dell'intelligenza

180
00:19:21,840 --> 00:19:28,760
artificiale spesso porta ad un'eccessiva fiducia da parte dell'utilizzatore ad esempio per qualcuno

181
00:19:28,760 --> 00:19:35,000
magari non molto esperto o non molto sicuro di sé potrebbe diventare pian piano sempre più facile

182
00:19:35,000 --> 00:19:41,280
dare più peso al codice prodotto dall'intelligenza artificiale che al proprio prendendo così

183
00:19:41,280 --> 00:19:47,600
l'abitudine di favorire la soluzione dell'algoritmo a discapito della propria in maniera a critica

184
00:19:47,600 --> 00:19:53,600
automatica e una volta che la percezione di responsabilità passa dall'umano alla macchina

185
00:19:53,600 --> 00:20:01,000
io già mi immagino commenti a ticket che recitano il metodo x generato da copilot ha introdotto il

186
00:20:01,000 --> 00:20:06,000
tale baggo la tale vulnerabilità o non ha considerato che il nostro software poteva

187
00:20:06,000 --> 00:20:12,000
produrre questo particolare caso e a questo va poi aggiunto che almeno per noi umani le

188
00:20:12,000 --> 00:20:19,240
capacità vanno costantemente allenate e l'abilità del problem solving non fa eccezione quindi se si

189
00:20:19,240 --> 00:20:25,200
utilizza copilot per risolvere problemi banali e ci si concentra su quelli più complicati allora

190
00:20:25,200 --> 00:20:30,640
potrebbe essere un bene ma se lo facciamo pian piano diventare il nostro sostituto gli facciamo

191
00:20:30,640 --> 00:20:36,840
prendere le nostre decisioni allora noi pian piano diventeremo sempre meno capaci e solo degli

192
00:20:36,840 --> 00:20:43,240
esecutori occhio però vorrei che fosse chiaro che con questo non sto dicendo che copilot sia un

193
00:20:43,240 --> 00:20:48,560
pericolo o che l'intelligenza artificiale non vada utilizzata mi raccomando per come la vedo

194
00:20:48,560 --> 00:20:54,160
io qualunque strumento sia d'aiuto per migliorare la vita il lavoro alla società in generale deve

195
00:20:54,160 --> 00:21:00,120
essere sempre bene accetto l'importante è valutarne bene le implicazioni ed utilizzarlo

196
00:21:00,120 --> 00:21:06,360
poi in maniera critica usando il cervello bene questa era la mia esperienza e le mie riflessioni

197
00:21:06,360 --> 00:21:12,800
su github copilot io spero come al solito che l'episodio ti sia piaciuto e ti ricordo che se

198
00:21:12,800 --> 00:21:18,360
posso produrre questi contenuti è solo grazie a te che li ascolti e dalla community di pensieri

199
00:21:18,360 --> 00:21:23,840
in codice che sostiene il progetto scopri anche tu come dare una mano collegandoti al sito

200
00:21:24,320 --> 00:21:30,400
pensieriincodice.it con due i puoi ascoltare tutti gli episodi sulle maggiori piattaforme e app di

201
00:21:30,400 --> 00:21:36,480
podcast o riceverli direttamente sul tuo smartphone iscrivendoti al canale telegram se pensieri in

202
00:21:36,480 --> 00:21:42,400
codice ti piace e se sei arrivato fin qui immagino ti piaccia puoi condividerlo con un amico per farglielo

203
00:21:42,400 --> 00:21:48,320
conoscere così farai un favore a entrambi per oggi dunque è proprio tutto io ti do appuntamento

204
00:21:48,320 --> 00:21:55,000
al prossimo episodio e ti ricordo che un informatico risolve problemi a volte anche usando il computer

