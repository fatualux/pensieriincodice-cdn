Pensieri in codice, idee dal mondo del software a cura di Valerio Galano.
Salve a tutti ragazzi e benvenuti a questo primo episodio di Pensieri in Codice,
il podcast nel quale vorrei chiacchierare con voi di argomenti presi dal mondo del software,
di internet e della programmazione. Questo piccolo progetto vuole essere per me uno scambio
di idee, quindi sono bene accetti commenti, sia positivi che negativi, e anche consigli
sull'utilizzo di questo splendido mezzo che è il podcast e che per me è un territorio quasi
inesplorato. Spero dunque di riuscire a darvi degli spunti di riflessione sui quali poi poter
discutere assieme. Ora però basta con le presentazioni e passiamo a parlare del
nostro primo argomento che, come avrete capito dal titolo, riguarda la programmazione.
Quella che abbiamo appena ascoltato è la voce di Steve Jobs, co-fondatore della Apple e
suo amministratore delegato fino al 2011, anno della sua scomparsa. In italiano le sue
parole suonano più o meno in questo modo. Tutti in questo paese dovrebbero imparare a
programmare un computer, dovrebbero imparare un linguaggio di programmazione perché ciò
insegna a pensare. Per capire le parole di Jobs dobbiamo tenere a mente un fatto importante e
cioè che imparare a programmare un computer o, volendo dirla in termini più moderni,
imparare a sviluppare un software non è un'attività che richiede unicamente la
conoscenza di uno o più linguaggi di programmazione, né consiste unicamente nello
codice che non abbia errori di sintassi o che si compili e si esegua correttamente.
In realtà sviluppare software vuol dire principalmente essere in grado di risolvere
problemi. Ad un buon programmatore, infatti, non è unicamente richiesta la mera conoscenza
di uno o più linguaggi di programmazione, quanto piuttosto una specifica abilità
definita problem solving. Proviamo a descrivere il concetto di problem solving utilizzando un
esempio. Immaginiamo quindi di avere un oggetto che potrebbe essere un cimelio di famiglia come
ad esempio un vecchio orologio al quale siamo magari per qualche motivo particolarmente
affezionati. Un giorno di punto in bianco questo nostro orologio smette di funzionare. A quel punto
avremo un problema e banalmente questo problema sarà poter sapere l'ora. Ovviamente ora voi
starete pensando che questo è un problema di poco conto, basterà semplicemente sostituire
il nostro orologio con uno o qualsiasi anche comprato all'ikea. Bene, dal punto di vista
teorico questa è sì una soluzione al nostro problema, ma dal punto di vista del problem
solving, essa non tiene conto di una cosa fondamentale detta all'inizio e cioè che noi
siamo particolarmente affezionati a quell'orologio e non vorremmo sostituirlo per nessun motivo al
mondo. Questa condizione dunque viene a rappresentare per noi un vincolo sul problema
iniziale che rende non valida la soluzione di sostituire l'orologio. Riparare il nostro
sarà una soluzione che risolve il problema e contemporaneamente ne rispetta il vincolo. Per
problem solving si intende quindi quell'attività del pensiero volta ad individuare la soluzione
di un problema rispettandone i vincoli. In particolare nel caso della programmazione
tale soluzione sarà espressa come un insieme finito di operazioni con determinate
che andranno poi a formare un algoritmo. Tale algoritmo potrà poi essere trasformato in un
vero e proprio software. Per un programmatore è quindi imprescindibile conoscere e affinare questo
tipo di tecnica, ma anche per chi si occupa di tutt'altro conoscerne le tecniche base può
risultare molto utile e interessante. Nel libro Think Like a Programmer di cui vi lascio un
link in descrizione, vi avviso che se acquisterete i libri o i prodotti che vi segnalo dai link ad
Amazon che trovate nella descrizione voi non pagherete una quota aggiuntiva ma parte del
ricavato invece di andare ad Amazon verrà trasferito al mio account ed io potrò utilizzare
questi fondi per migliorare e portare avanti questo progetto. Come vi dicevo appunto nel
libro Think Like a Programmer, Sprawl individua tutta una serie di tecniche che
possono essere utilizzate per affinare le proprie capacità di problem solving. In
particolare egli menziona 8 tecniche di base tra le quali io ne selezionate 3 che ora vi andrò
a illustrare. Tecnica numero 1 munirsi di un buon piano. Nel nostro percorso verso la
risoluzione di un problema sarà sempre buona norma spendere un po' di tempo per redigere
un buon piano. Un insieme di passi che se completati tutti e nel giusto ordine ci
porteranno automaticamente alla soluzione del problema. Se infatti affronteremo il
nostro problema sprovvissi di un buon piano probabilmente ci troveremo in difficoltà nel
momento in cui sarà necessario misurare i progressi o pianificare le risorse e i tempi.
Se invece avremo il nostro piano da seguire sarà molto più facile per noi pianificare
le attività controllare lo stato di avanzamento dei lavori e sapere in ogni momento quanto
siamo lontani dal nostro obiettivo. Immaginiamo ad esempio di dover redigere una tesina per
un esame e di avere 15 giorni di tempo per consegnarla. Un buon piano potrebbe essere
il seguente. Primo giorno scegliere gli argomenti da inserire nella tesi, successivi tre giorni
studiare gli argomenti selezionati e raccogliere le informazioni necessarie, ancora altri
giorni per scrivere una prima bozza, due giorni poi per rivedere e correggere la
bozza appena scritta, un ulteriore giorno per redigere la versione definitiva della tesina.
In questo modo ci avanzerebbero ben 5 giorni da impiegare in caso di imprevisti o errori di
valutazione. Il nostro obiettivo non sarebbe quello genericamente di dover redigere una
tesina, bensì giorno per giorno avremo un singolo e più gestibile obiettivo. Potremo
inoltre verificare i nostri progressi se siamo in anticipo o in ritardo sulla tabella
di marcia ed eventualmente correggere il nostro piano. Ovviamente infatti dobbiamo
essere consci del fatto che il nostro piano, per quanto dettagliato e preciso,
una volta a contatto con la realtà potrebbe subire tutta una serie di modifiche, ma
fintanto che conserveremo il controllo sulla nostra pianificazione questo per noi non sarà
un problema. In ogni caso però approcciarsi alla risoluzione di un problema senza avere
alle spalle un piano ben definito, equivarrà praticamente ad affidarsi alla fortuna.
Tecnica numero 2. Riformulare il problema. Così come quando si
intraprende un viaggio è buona norma esaminare tutte le strade disponibili per poter scegliere
quella più adatta alle nostre esigenze, magari quella più breve o quella panoramica o semplicemente
quella che ci piace di più, allo stesso modo quando si affronta un problema è bene
riformularlo in vari modi per poter individuare qual è quello migliore dal quale approcciarsi
adesso. Analizzare infatti lo stesso problema da più angolazioni potrebbe mettere in evidenza
collegamenti e informazioni poco chiare o nascoste. Riformulare quindi il problema ci
permetterà di plasmarlo nella forma più adatta ad essere risolta. Proviamo a chiarire il concetto
riformulando il rompicapo del lupo, la pecora e il cavolo. Per chi non lo conoscesse in questo
rompicapo c'è un contadino che si trova sulla riva di un fiume con appunto un lupo,
una pecora ed un cavolo. Il problema del nostro contadino è portare sulla seconda riva del fiume
i tre oggetti, va per farlo e gli dispone solamente di una barca che può trasportare
un unico oggetto per volta. Oltre a ciò il contadino sa che non potrà lasciare su una
delle due rive del fiume la coppia formata da pecora e lupo perché quest'ultimo mangerà
la prima o cavolo e pecora sempre perché lo vino mangerà l'ortaggio. In questa che è la
formulazione classica del problema abbiamo dunque tre vincoli. Il primo è che il contadino
possa portare un solo oggetto per volta gli altri due sono rappresentati dal fatto
che esistono specifiche coppie quindi pecora lupo e pecora cavolo che non possono essere
lasciati da soli sulla stessa riva. Ora so che molti di voi già conosceranno la soluzione al
rompicapo o saranno comunque in grado di trovarla in poco tempo facilmente ma quello che interessa
a noi è il processo di riformulazione del problema quindi proviamo a ragionare insieme.
Innanzitutto esaminiamo i vincoli sugli oggetti che il contadino deve trasportare. Il problema
ci dice esplicitamente quali non possono essere lasciati insieme tuttavia a partire da queste
informazioni se ne può dedurre una terza e cioè che esiste una particolare coppia che
può essere lasciata senza sorveglianza da sola su un'arriva del fiume e cioè la coppia cavolo
lupo. Questa informazione pur non aggiungendo o togliendo nulla alla formulazione del
nostro problema risulta però più utilizzabile rispetto alle altre e dopo andremo a vedere perché
nel frattempo notiamo anche che, benché ci venga detto che la barca del nostro contadino
non può trasportare più di un oggetto per volta, nessuno vieta che gli possa portare
avanti e indietro lo stesso oggetto più di una volta e anche questa è un'informazione
non menzionata esplicitamente ma fondamentale ai fini della risoluzione. Grazie a queste due
informazioni che abbiamo scoperto infatti per il nostro contadino sarà tutto molto
innanzitutto egli potrà decidere immediatamente qual è il primo animale da portare ovviamente la
pecora perché sarà l'unico oggetto che se separato dal gruppo lascerà sulla riva quella
che potremmo definire la coppia sicura il lupo e il cavolo. Detto ciò la seconda delle nostre
informazioni nascoste permetterà al nostro contadino di riportare indietro la pecora
nel momento in cui avrà portato il secondo animale sulla seconda riva in questo modo
potrà comunque evitare di lasciare due animali incompatibili sulla stessa riva.
A questo punto la soluzione sarà molto semplice, per risolvere il rompicavo basterà portare prima
la pecora sulla seconda riva, tornare indietro e prendere ad esempio il lupo, portarlo sulla
seconda riva, riprendere la pecora in modo che il lupo non la mangi, riportarla sulla
a quel punto prendere il cavolo, portarlo sulla seconda riva e tornare finalmente a riprendere
la pecora. Tecnica numero 3 suddividere il problema. Questa tecnica si basa su di un
concetto molto semplice, se riesco a prendere il mio problema e suddividerlo in due problemi
più semplici potrò allora risolvere singolarmente i due problemi e unire le loro soluzioni per
giungere alla soluzione del problema iniziale. Applicando questa tecnica in modo iterativo è
quindi possibile suddividere il problema in tanti problemi, a mano a mano, sempre più
semplici fino ad ottenere una serie di problemi sufficientemente semplici da essere
risolti in modo agevole. A quel punto ricombinando insieme tutte le soluzioni di questi
problemi sarà possibile ottenere la soluzione del problema di partenza. Immaginiamo ad esempio
di dover calcolare l'area di un quadrato di cui conosciamo solamente il perimetro,
certamente potremmo trovare una formula per calcolare direttamente questo valore,
tuttavia possiamo suddividere il nostro problema in due più semplici. Il primo che
a partire dal perimetro calcoli il lato e il secondo che a partire dal lato calcoli l'area.
A questo punto risolvendo i due problemi avremmo risolto il nostro problema di partenza.
Siamo dunque giunti al termine del primo episodio di pensieri in codice. Io vi
ringrazio tantissimo per essere arrivati fin qui, so che questo episodio è venuto
un po' lungo e vi prometto che i prossimi saranno più brevi, quindi rapidamente vi
invito a lasciarmi la vostra opinione nei commenti e vi do appuntamento alla prossima.
